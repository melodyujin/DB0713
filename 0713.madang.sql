//2개 이상의 서로 다른 출판사에서 도서를 구매한 고객의 이름
SELECT NAME FROM CUSTOMER C1
WHERE(SELECT COUNT(DISTINCT PUBLISHER)FROM CUSTOMER, ORDERS, BOOK
    WHERE CUSTOMER.CUSTID=ORDERS.CUSTID
    AND ORDERS.BOOKID=BOOK.BOOKID
    AND (NAME LIKE C1.NAME))>=2;
    
//전체 고객의 30% 이상이 구매한 도서
SELECT BOOKNAME FROM BOOK B1
    WHERE ((SELECT COUNT(BOOK.BOOKID)FROM BOOK, ORDERS
        WHERE BOOK.BOOKID=ORDERS.BOOKID AND BOOK.BOOKID=B1.BOOKID)
        >=0.3*(SELECT COUNT(*) FROM CUSTOMER));
        
//데이터 형태와 범위를 정하는 CHECK
//테이블을 생성할 때 CHECK 제약 조건 설정하기
CREATE TABLE TABLE_CHECK(
    LOGIN_ID VARCHAR2(20) CONSTRAINT TBLCK_LOGINID_PK PRIMARY KEY,
    LOGIN_PWD VARCHAR2(20) CONSTRAINT TBLCK_LOGINPW_CK CHECK (LENGTH(LOGIN_PWD)>3),
    TEL VARCHAR2(20)
);

DESC TABLE_CHECK;

//CHECK 제약 조건에 맞지 않는 예
INSERT INTO TABLE_CHECK
VALUES ('TEST_ID', '123', '010-1234-5678');

//CHECK 제약 조건에 맞는 예
INSERT INTO TABLE_CHECK
VALUES ('TEST_ID', '1234', '010-1234-5678');

SELECT *FROM TABLE_CHECK;

//CHECK 제약 조건 확인하기
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
    FROM USER_CONSTRAINTS
    WHERE TABLE_NAME LIKE 'TABLE_CHECK';